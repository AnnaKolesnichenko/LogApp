{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport ProfilePost from \"../components/ProfilePost\";\nimport backImage from \"../images/pic.jpg\";\nimport dummy_data from \"../data/dummy_data.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen(_ref) {\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    image = _useState2[0],\n    setImage = _useState2[1];\n  useEffect(function () {\n    navigation.setOptions({\n      title: \"Profile\"\n    });\n    setProfileImg();\n  }, []);\n  var photo = \"https://play-lh.googleusercontent.com/_GWAfXc8AQtfIsYAd5dlEDmc1mostQR51CiH_3ipq2r9fBFjYcvk1CdwJielLtkkfED3\";\n  var setProfileImg = function setProfileImg() {\n    setImage(photo);\n  };\n  return _jsx(_Fragment, {\n    children: _jsx(ImageBackground, {\n      style: styles.mainScreen,\n      source: backImage,\n      children: _jsxs(View, {\n        style: styles.profileContainer,\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.plusSquare,\n          children: [_jsx(Image, {\n            source: {\n              uri: image\n            },\n            style: {\n              width: \"100%\",\n              height: \"100%\",\n              borderRadius: 10\n            }\n          }), image ? _jsx(Pressable, {\n            style: styles.crossBtn,\n            children: _jsx(Entypo, {\n              name: \"cross\",\n              size: 24,\n              color: \"#cccccc\"\n            })\n          }) : _jsx(Pressable, {\n            style: styles.plusPressed,\n            children: _jsx(AntDesign, {\n              name: \"pluscircleo\",\n              size: 26,\n              color: \"orange\"\n            })\n          })]\n        }), _jsx(Text, {\n          style: styles.profileTitle,\n          children: \"Mermaid of The Sea\"\n        }), _jsx(FlatList, {\n          data: dummy_data,\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          },\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsx(ProfilePost, {\n              title: item.title,\n              image: item.image,\n              comments: item.comments,\n              location: item.location,\n              country: item.country,\n              likes: item.likes\n            });\n          },\n          showsVerticalScrollIndicator: false\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\"\n  },\n  plusPressed: {\n    position: \"absolute\",\n    bottom: 20,\n    right: -10\n  },\n  plusSquare: {\n    width: 140,\n    height: 140,\n    position: \"fixed\",\n    marginTop: -90,\n    zIndex: 99,\n    backgroundColor: \"#f9f4f4\",\n    borderWidth: 1,\n    borderColor: \"#f9f4f4\",\n    borderRadius: 16\n  },\n  crossBtn: {\n    position: \"absolute\",\n    bottom: 20,\n    right: -10,\n    padding: 2,\n    backgroundColor: \"white\",\n    borderRadius: 50,\n    borderWidth: 1,\n    borderColor: \"#cccccc\"\n  },\n  mainScreen: {\n    flex: 1,\n    position: \"relative\",\n    resizeMode: \"contain\",\n    zIndex: -1,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  profileContainer: {\n    paddingHorizontal: 5,\n    backgroundColor: \"white\",\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    bottom: 0,\n    height: \"70%\",\n    width: \"100%\",\n    borderTopLeftRadius: 25,\n    borderTopRightRadius: 25,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  profileTitle: {\n    fontSize: 24,\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    marginTop: 20,\n    marginBottom: 5\n  },\n  profileList: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\"\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useEffect","useState","Text","Image","View","StyleSheet","ImageBackground","Pressable","TouchableOpacity","useNavigation","AntDesign","Entypo","FlatList","ProfilePost","backImage","dummy_data","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ProfileScreen","_ref","route","navigation","_useState","_useState2","_slicedToArray","image","setImage","setOptions","title","setProfileImg","photo","children","style","styles","mainScreen","source","profileContainer","plusSquare","uri","width","height","borderRadius","crossBtn","name","size","color","plusPressed","profileTitle","data","keyExtractor","item","id","renderItem","_ref2","comments","location","country","likes","showsVerticalScrollIndicator","create","container","flex","flexDirection","position","bottom","right","marginTop","zIndex","backgroundColor","borderWidth","borderColor","padding","resizeMode","display","justifyContent","alignItems","paddingHorizontal","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","fontSize","fontWeight","textAlign","marginBottom","profileList"],"sources":["/Users/anyakolesnishenko/Desktop/projects/LogApp/src/screens/ProfileScreen.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Text,\n  Image,\n  View,\n  StyleSheet,\n  ImageBackground,\n  Pressable,\n  TouchableOpacity,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport ProfilePost from \"../components/ProfilePost\";\nimport backImage from \"../images/pic.jpg\";\nimport dummy_data from \"../data/dummy_data.json\";\n\nconst ProfileScreen = ({ route }) => {\n  const navigation = useNavigation();\n\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    navigation.setOptions({\n      title: \"Profile\",\n    });\n    setProfileImg();\n  }, []);\n\n  const photo =\n    \"https://play-lh.googleusercontent.com/_GWAfXc8AQtfIsYAd5dlEDmc1mostQR51CiH_3ipq2r9fBFjYcvk1CdwJielLtkkfED3\";\n\n  const setProfileImg = () => {\n    setImage(photo);\n  };\n\n  return (\n    <>\n      <ImageBackground style={styles.mainScreen} source={backImage}>\n        <View style={styles.profileContainer}>\n          <TouchableOpacity\n            style={styles.plusSquare}\n            // onPress={handleImagePicker}\n          >\n            <Image\n              source={{ uri: image }}\n              style={{ width: \"100%\", height: \"100%\", borderRadius: 10 }}\n            />\n            {image ? (\n              <Pressable style={styles.crossBtn}>\n                <Entypo name=\"cross\" size={24} color=\"#cccccc\" />\n              </Pressable>\n            ) : (\n              <Pressable style={styles.plusPressed}>\n                <AntDesign name=\"pluscircleo\" size={26} color=\"orange\" />\n              </Pressable>\n            )}\n          </TouchableOpacity>\n          <Text style={styles.profileTitle}>Mermaid of The Sea</Text>\n\n          <FlatList\n            data={dummy_data}\n            keyExtractor={(item) => item.id}\n            renderItem={({ item }) => (\n              <ProfilePost\n                title={item.title}\n                image={item.image}\n                comments={item.comments}\n                location={item.location}\n                country={item.country}\n                likes={item.likes}\n              />\n            )}\n            showsVerticalScrollIndicator={false}\n          ></FlatList>\n        </View>\n      </ImageBackground>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n  },\n  plusPressed: {\n    position: \"absolute\",\n    bottom: 20,\n    right: -10,\n  },\n  plusSquare: {\n    width: 140,\n    height: 140,\n    position: \"fixed\",\n    marginTop: -90,\n    zIndex: 99,\n    backgroundColor: \"#f9f4f4\",\n    borderWidth: 1,\n    borderColor: \"#f9f4f4\",\n    borderRadius: 16,\n  },\n  crossBtn: {\n    position: \"absolute\",\n    bottom: 20,\n    right: -10,\n    padding: 2,\n    backgroundColor: \"white\",\n    borderRadius: 50,\n    borderWidth: 1,\n    borderColor: \"#cccccc\",\n  },\n  mainScreen: {\n    flex: 1,\n    position: \"relative\",\n    resizeMode: \"contain\",\n    zIndex: -1,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  profileContainer: {\n    paddingHorizontal: 5,\n    backgroundColor: \"white\",\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    bottom: 0,\n    height: \"70%\",\n    width: \"100%\",\n    borderTopLeftRadius: 25,\n    borderTopRightRadius: 25,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n  profileTitle: {\n    fontSize: 24,\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    marginTop: 20,\n    marginBottom: 5,\n  },\n\n  // outerContainer: {\n  //   width: \"100%\",\n  //   alignItems: \"center\",\n  //   justifyContent: \"center\",\n  // },\n  profileList: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n  },\n  // registerBtn: {\n  //   justifyContent: \"center\",\n  //   alignItems: \"center\",\n  //   marginTop: 35,\n  //   paddingHorizontal: 35,\n  //   paddingVertical: 10,\n  //   width: \"100%\",\n  //   height: 50,\n  //   borderRadius: 25,\n  //   textAlign: \"center\",\n  //   backgroundColor: \"#FF6C00\",\n  // },\n  // registerBtnStyle: {\n  //   color: \"white\",\n  // },\n  // pressableLine: {\n  //   marginTop: 20,\n  // },\n  // underlined: {\n  //   textDecorationLine: \"underline\",\n  // },\n  // pressedBtn: {\n  //   opacity: 0.6,\n  // },\n  // showPassInput: {\n  //   flexDirection: \"row\",\n  //   alignItems: \"center\",\n  //   justifyContent: \"center\",\n  //   width: \"100%\",\n  // },\n  // toggleButton: {\n  //   paddingHorizontal: 15,\n  //   paddingTop: 10,\n  //   position: \"absolute\",\n  //   right: 0,\n  // },\n  // toggleButtonText: {\n  //   fontSize: 12,\n  //   fontWeight: \"600\",\n  //   color: \"#3d4044\",\n  // },\n});\n\nexport default ProfileScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}