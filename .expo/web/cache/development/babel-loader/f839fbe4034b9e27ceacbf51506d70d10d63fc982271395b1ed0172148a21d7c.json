{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useCallback, useLayoutEffect, useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport MapView, { Marker } from \"react-native-maps\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar MapScreen = function MapScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    locationLat = _useState2[0],\n    setLocationLat = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    locationLng = _useState4[0],\n    setLocationLng = _useState4[1];\n  var location = {\n    locationLat: locationLat,\n    locationLng: locationLng\n  };\n  var region = {\n    latitude: 37.78,\n    longitude: -122.43,\n    latitudeDelta: 0.0922,\n    longitudeDelta: 0.0421\n  };\n  var selectLocationHandler = function selectLocationHandler(event) {\n    var lat = event.nativeEvent.coordinate.latitude;\n    var lng = event.nativeEvent.coordinate.longitude;\n    setLocationLat(lat);\n    setLocationLng(lng);\n  };\n  return _jsx(MapView, {\n    initialRegion: region,\n    style: styles.map,\n    onPress: selectLocationHandler,\n    children: locationLat && locationLng && _jsx(Marker, {\n      title: \"Picked Location\",\n      coordinate: {\n        latitude: locationLat,\n        longitude: locationLng\n      }\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  map: {\n    flex: 1,\n    marginTop: 110\n  }\n});\nexport default MapScreen;","map":{"version":3,"names":["React","useCallback","useLayoutEffect","useState","Alert","StyleSheet","MapView","Marker","jsx","_jsx","MapScreen","_ref","navigation","_useState","_useState2","_slicedToArray","locationLat","setLocationLat","_useState3","_useState4","locationLng","setLocationLng","location","region","latitude","longitude","latitudeDelta","longitudeDelta","selectLocationHandler","event","lat","nativeEvent","coordinate","lng","initialRegion","style","styles","map","onPress","children","title","create","flex","marginTop"],"sources":["/Users/anyakolesnishenko/Desktop/projects/LogApp/src/screens/MapScreen.jsx"],"sourcesContent":["import React, { useCallback, useLayoutEffect, useState } from \"react\";\nimport { Alert, StyleSheet } from \"react-native\";\nimport MapView, { Marker } from \"react-native-maps\";\n// import IconButton from \"../UI/IconButton\";\n\nconst MapScreen = ({ navigation }) => {\n  const [locationLat, setLocationLat] = useState();\n  const [locationLng, setLocationLng] = useState();\n\n  const location = {\n    locationLat,\n    locationLng,\n  };\n\n  const region = {\n    latitude: 37.78,\n    longitude: -122.43,\n    latitudeDelta: 0.0922,\n    longitudeDelta: 0.0421,\n  };\n\n  const selectLocationHandler = (event) => {\n    const lat = event.nativeEvent.coordinate.latitude;\n    const lng = event.nativeEvent.coordinate.longitude;\n    setLocationLat(lat);\n    setLocationLng(lng);\n  };\n\n  // const saveLocation = useCallback(() => {\n  //   if (!locationLat && !locationLng) {\n  //     Alert.alert(\"No location picked\", \"Choose a location\");\n  //     return;\n  //   }\n  //   navigation.navigate(\"AddPlace\", {\n  //     pickedLat: locationLat,\n  //     pickedLng: locationLng,\n  //   });\n  // }, [navigation, location]);\n\n  // useLayoutEffect(() => {\n  //   navigation.setOptions({\n  //     headerRight: ({ tintColor }) => (\n  //       <IconButton\n  //         name=\"save\"\n  //         size={24}\n  //         color={tintColor}\n  //         onPress={saveLocation}\n  //       />\n  //     ),\n  //   });\n  // }, [navigation, saveLocation]);\n\n  return (\n    <MapView\n      initialRegion={region}\n      style={styles.map}\n      onPress={selectLocationHandler}\n    >\n      {locationLat && locationLng && (\n        <Marker\n          title=\"Picked Location\"\n          coordinate={{ latitude: locationLat, longitude: locationLng }}\n        />\n      )}\n    </MapView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  map: {\n    flex: 1,\n    marginTop: 110,\n  },\n});\n\nexport default MapScreen;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,eAAe,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAEtE,OAAOC,OAAO,IAAIC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAGpD,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC7B,IAAAC,SAAA,GAAsCV,QAAQ,CAAC,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAClC,IAAAI,UAAA,GAAsCf,QAAQ,CAAC,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzCE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAElC,IAAMG,QAAQ,GAAG;IACfN,WAAW,EAAXA,WAAW;IACXI,WAAW,EAAXA;EACF,CAAC;EAED,IAAMG,MAAM,GAAG;IACbC,QAAQ,EAAE,KAAK;IACfC,SAAS,EAAE,CAAC,MAAM;IAClBC,aAAa,EAAE,MAAM;IACrBC,cAAc,EAAE;EAClB,CAAC;EAED,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIC,KAAK,EAAK;IACvC,IAAMC,GAAG,GAAGD,KAAK,CAACE,WAAW,CAACC,UAAU,CAACR,QAAQ;IACjD,IAAMS,GAAG,GAAGJ,KAAK,CAACE,WAAW,CAACC,UAAU,CAACP,SAAS;IAClDR,cAAc,CAACa,GAAG,CAAC;IACnBT,cAAc,CAACY,GAAG,CAAC;EACrB,CAAC;EA0BD,OACExB,IAAA,CAACH,OAAO;IACN4B,aAAa,EAAEX,MAAO;IACtBY,KAAK,EAAEC,MAAM,CAACC,GAAI;IAClBC,OAAO,EAAEV,qBAAsB;IAAAW,QAAA,EAE9BvB,WAAW,IAAII,WAAW,IACzBX,IAAA,CAACF,MAAM;MACLiC,KAAK,EAAC,iBAAiB;MACvBR,UAAU,EAAE;QAAER,QAAQ,EAAER,WAAW;QAAES,SAAS,EAAEL;MAAY;IAAE,CAC/D;EACF,CACM,CAAC;AAEd,CAAC;AAED,IAAMgB,MAAM,GAAG/B,UAAU,CAACoC,MAAM,CAAC;EAC/BJ,GAAG,EAAE;IACHK,IAAI,EAAE,CAAC;IACPC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAejC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}