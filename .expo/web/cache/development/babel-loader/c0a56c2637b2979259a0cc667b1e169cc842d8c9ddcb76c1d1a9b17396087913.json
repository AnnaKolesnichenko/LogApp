{"ast":null,"code":"import \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegistrationScreen from \"../screens/RegistrationScreen\";\nimport BottomNavigation from \"./BottomTabsRoot\";\nimport CommentsScreen from \"../screens/CommentsScreen\";\nimport MapScreen from \"../screens/MapScreen\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar MainRootNavigation = function MainRootNavigation() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Login\",\n    screenOptions: function screenOptions(_ref) {\n      var navigation = _ref.navigation;\n      return {\n        headerTransparent: true,\n        headerStyle: {\n          backgroundColor: \"transparent\",\n          borderBottomColor: \"grey\",\n          borderBottomWidth: 1\n        }\n      };\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Registration\",\n      component: RegistrationScreen,\n      options: {\n        headerShown: false\n      },\n      screenOptions: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen,\n      options: {\n        headerShown: false\n      },\n      screenOptions: {\n        headerShown: false\n      }\n    })]\n  });\n};\nvar AuthenticatedStack = function AuthenticatedStack() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      component: BottomNavigation,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0456\",\n      component: CommentsScreen,\n      options: {\n        title: \"Коментарі\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"\\u041C\\u0430\\u043F\\u0430\",\n      component: MapScreen,\n      options: {\n        title: \"Мапа\"\n      }\n    })]\n  });\n};\nvar Navigation = function Navigation() {\n  var isAuthenticated = useSelector(function (state) {\n    return state.authenticate.isAuthenticated;\n  });\n  return _jsxs(NavigationContainer, {\n    children: [isAuthenticated && _jsx(AuthenticatedStack, {}), !isAuthenticated && _jsx(MainRootNavigation, {})]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  tabIcon: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  pressed: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 5,\n    paddingVertical: 5,\n    marginTop: 10,\n    backgroundColor: \"#FF6C00\",\n    borderRadius: 20,\n    color: \"white\",\n    width: 60,\n    height: 40,\n    color: \"white\"\n  },\n  logOut: {\n    marginRight: 35\n  },\n  pressedLogout: {\n    fill: \"#FF6C00\"\n  }\n});\nexport default Navigation;","map":{"version":3,"names":["NavigationContainer","createStackNavigator","StyleSheet","LoginScreen","RegistrationScreen","BottomNavigation","CommentsScreen","MapScreen","useState","useSelector","jsx","_jsx","jsxs","_jsxs","Stack","MainRootNavigation","Navigator","initialRouteName","screenOptions","_ref","navigation","headerTransparent","headerStyle","backgroundColor","borderBottomColor","borderBottomWidth","children","Screen","name","component","options","headerShown","AuthenticatedStack","title","Navigation","isAuthenticated","state","authenticate","styles","create","container","flex","tabIcon","justifyContent","alignItems","pressed","paddingHorizontal","paddingVertical","marginTop","borderRadius","color","width","height","logOut","marginRight","pressedLogout","fill"],"sources":["/Users/anyakolesnishenko/Desktop/projects/LogApp/src/routes/MainRoot.jsx"],"sourcesContent":["import \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { StyleSheet } from \"react-native\";\n\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegistrationScreen from \"../screens/RegistrationScreen\";\nimport BottomNavigation from \"./BottomTabsRoot\";\nimport CommentsScreen from \"../screens/CommentsScreen\";\nimport MapScreen from \"../screens/MapScreen\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nconst Stack = createStackNavigator();\n\nconst MainRootNavigation = () => {\n  return (\n    <Stack.Navigator\n      initialRouteName=\"Login\"\n      screenOptions={({ navigation }) => ({\n        headerTransparent: true,\n        headerStyle: {\n          backgroundColor: \"transparent\",\n          borderBottomColor: \"grey\",\n          borderBottomWidth: 1,\n        },\n      })}\n    >\n      <Stack.Screen\n        name=\"Registration\"\n        component={RegistrationScreen}\n        options={{\n          headerShown: false,\n        }}\n        screenOptions={{\n          headerShown: false,\n        }}\n      />\n      <Stack.Screen\n        name=\"Login\"\n        component={LoginScreen}\n        options={{\n          headerShown: false,\n        }}\n        screenOptions={{\n          headerShown: false,\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst AuthenticatedStack = () => {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"Home\"\n        component={BottomNavigation}\n        options={{\n          headerShown: false,\n        }}\n      />\n      <Stack.Screen\n        name=\"Коментарі\"\n        component={CommentsScreen}\n        options={{ title: \"Коментарі\" }}\n      />\n      <Stack.Screen\n        name=\"Мапа\"\n        component={MapScreen}\n        options={{ title: \"Мапа\" }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst Navigation = () => {\n  const isAuthenticated = useSelector(\n    (state) => state.authenticate.isAuthenticated\n  );\n  return (\n    <NavigationContainer>\n      {isAuthenticated && <AuthenticatedStack />}\n      {!isAuthenticated && <MainRootNavigation />}\n    </NavigationContainer>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  tabIcon: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  pressed: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 5,\n    paddingVertical: 5,\n    marginTop: 10,\n    backgroundColor: \"#FF6C00\",\n    borderRadius: 20,\n    color: \"white\",\n    width: 60,\n    height: 40,\n    color: \"white\",\n  },\n  logOut: {\n    // marginTop: 35,\n    marginRight: 35,\n  },\n  pressedLogout: {\n    fill: \"#FF6C00\",\n  },\n});\nexport default Navigation;\n\n// export default MainRootNavigation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}